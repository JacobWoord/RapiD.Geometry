<UserControl x:Class="RapiD.Geometry.Views.Canvas3DView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:hx="http://helix-toolkit.org/wpf/SharpDX" 
             xmlns:local="clr-namespace:RapiD.Geometry.Views" 
             xmlns:viewmodels="clr-namespace:RapiD.Geometry.ViewModels" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             d:DataContext="{d:DesignInstance Type=viewmodels:Canvas3DViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>

        <Grid       Background="Black"
                    
                    Height="40"
                    Grid.Row="0"
                    Grid.ColumnSpan="3">
            <StackPanel Orientation="Horizontal">
                <Button Margin="5"
                    Command="{Binding GoHomeCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Home"></Button>

                <Button Margin="5"
                    Command="{Binding DrawTorrusCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Draw Torrus"></Button>

                <Button Margin="5"
                    Command="{Binding DrawCillinderCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Draw Cillinder"></Button>

                <Button Margin="0"
                    Command="{Binding DrawButtonSphereCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Draw Button"></Button>

                <Button Margin="0"
                    Command="{Binding DrawSingleChainLinkCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="SingleChainLink"></Button>

                <Button Margin="0"
                    Command="{Binding DrawSphereCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Draw Sphere"></Button>

                <Button Margin="0"
                    Command="{Binding CreateChainCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Create Chain"></Button>

                <Button Margin="0"
                    Command="{Binding RemoveCommand}"    
                    Background="Black"
                    MinWidth="100"
                    Foreground="White"
                    BorderBrush="White"
                    BorderThickness="2"
                    Content="Remove"></Button>

               
               
                          
                    






            </StackPanel>

        </Grid>

        <Grid Grid.Row="1"
              Grid.ColumnSpan="2">

            <hx:Viewport3DX 
                
                Loaded="Viewport3DX_Loaded"
               IsChangeFieldOfViewEnabled="True"
               ZoomSensitivity="0.9"
            CameraRotationMode="Trackball"
                ShowCoordinateSystem="True"
                 Camera="{Binding Camera}"
                MouseDown3D="Viewport3DX_MouseDown3D"
                
                ShowCameraInfo="True"
                ZoomExtentsWhenLoaded="True"
                ShowFrameDetails="False"
                BackgroundColor="Black"
                ModelUpDirection="0,0,1"
                InfoForeground="White"
                FixedRotationPointEnabled="True"
                ShowTriangleCountInfo="True"
                InfoBackground="Transparent"
                EnableSwapChainRendering ="True">
                <hx:Viewport3DX.InputBindings>
                    <KeyBinding Key="B" Command="hx:ViewportCommands.BackView"/>
                    <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView"/>
                    <KeyBinding Key="U" Command="hx:ViewportCommands.TopView"/>
                    <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView"/>
                    <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView"/>
                    <KeyBinding Key="R" Command="hx:ViewportCommands.RightView"/>
                    <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E"/>
                    <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick"/>
                    <!--<MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick"/>-->
                    <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="LeftClick"/>
                </hx:Viewport3DX.InputBindings>
                
                
              

                <!--Lighting-->
                <hx:SpotLight3D Color="Yellow" ></hx:SpotLight3D>
                <hx:AmbientLight3D Color="Gray" ></hx:AmbientLight3D>
                <hx:DirectionalLight3D Color="LightYellow" Direction="0,0,-1" ></hx:DirectionalLight3D>
                
                <!--Models-->
                <hx:ItemsModel3D  ItemsSource="{Binding Geometry3DCollection}" >



                    <hx:ItemsModel3D.ItemTemplate>
                        <DataTemplate>
                            <hx:MeshGeometryModel3D 
                                RenderWireframe="False"
                                EnableViewFrustumCheck="False"
                                CullMode="Back"                              
                                Transform="{Binding Transform}"
                                Geometry="{Binding MeshGeometry}"
                                Material="{Binding CurrentMaterial}">
                                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Mouse3DDown">
                                        <i:InvokeCommandAction Command="{Binding SelectCommand}"></i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                                
                            </hx:MeshGeometryModel3D>
                        </DataTemplate>
                    </hx:ItemsModel3D.ItemTemplate>

                     

                               

                         
                           

          

                </hx:ItemsModel3D>

                <hx:CoordinateSystemModel3D 
                    AxisXColor="Red"
                    AxisYColor="Green"
                    LabelColor="White"
                    IsRendering="true"
                    CoordinateSystemLabelX="X"
                    CoordinateSystemLabelY="Y"
                    CoordinateSystemLabelZ="Z"
                    AxisZColor="Blue"
                    Mode="RelativeScreenSpaced"                  
                    SizeScale="200"                
                    AbsolutePosition3D="0,0,0">

                </hx:CoordinateSystemModel3D>

            </hx:Viewport3DX>

        </Grid>

        <TextBlock Grid.Row="0"
                   Grid.Column="2"
                   Foreground="white"
                   FontWeight="SemiBold"
                   Margin="5 10 "
                   HorizontalAlignment="Center"
                   Text="Properties"/>

        <Grid Grid.Column="2"
              Grid.Row="1"
              Background="White"
              Opacity="0.9"
              Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

           
            
            <StackPanel>
                <Label Foreground="Black" HorizontalAlignment="Center">Diameter/Radius</Label>
                <Slider Margin="10 5" Maximum="100" TickFrequency="5" TickPlacement="BottomRight" Name="S1Value" Value="{Binding Diameter, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateDiameterCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock Background="Black" Foreground="White" Text="{Binding ElementName=S1Value,Path=Value}"/>
            </StackPanel>

            <StackPanel Grid.Row="1">
                <Label Foreground="Black" HorizontalAlignment="Center">Width:</Label>
                <Slider Margin="10 0" Maximum="100" Minimum="50" TickFrequency="1" TickPlacement="BottomRight" Name="WidthValue" Value="{Binding Width,Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateWidthCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock Background="Black" Foreground="White" Text="{Binding ElementName=WidthValue,Path=Value}"/>
            </StackPanel>

            <StackPanel Grid.Row="2">
                <Label Foreground="Black" HorizontalAlignment="Center">Length</Label>
                <Slider Margin="10 5" Maximum="100" Minimum="30" TickFrequency="1" TickPlacement="BottomRight" Name="LengthValue" Value="{Binding Length, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateLengthCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock Background="Black" Foreground="White" Text="{Binding ElementName=LengthValue,Path=Value}"/>
            </StackPanel>

            <TextBlock Text="{Binding NumberOfChainCopies}"/>









        </Grid>








            <StackPanel Background="Black"
                    Height="20"
                    Grid.Row="2"
                    Grid.ColumnSpan="3"></StackPanel>




    </Grid>
</UserControl>
