<UserControl
    x:Class="RapiD.Geometry.Views.Canvas3DView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:RapiD.Geometry.Views"
    xmlns:models="clr-namespace:RapiD.Geometry.Models"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:RapiD.Geometry.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:Canvas3DViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="1000"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="200" />
        </Grid.RowDefinitions>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="0.2*" />
        </Grid.ColumnDefinitions>

        <Grid
            Grid.Row="0"
            Grid.ColumnSpan="3"
            Height="60"
            HorizontalAlignment="Center"
            Background="White">
            <StackPanel Orientation="Horizontal">
                <Button
                    MinWidth="100"
                    Margin="5 2"
                    Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding GoHomeCommand}"
                    Content="Home"
                    />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                    Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding DrawTorrusCommand}"
                    Content="Draw Torrus"
                    />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                     Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding DrawCillinderCommand}"
                    Content="Draw Cillinder"
                     />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                    Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding ReplaceCommand}"
                    Content="Draw Button"
                     />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                    Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding ReplaceCommand}"
                    Content="Replace cillinder"
                     />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                    Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding UpdatePositionDoorAndNodesCommand}"
                    Content="place nodes an door"
                    
                    />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                     Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding CreateChainCommand}"
                    Content="Create Chain"
                     />

                <Button
                    Margin="5 2"
                    MinWidth="120"
                    Background="White"
                    BorderBrush="black"
                    Foreground="black" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding DrawTranslatedNodesCommand}"
                    Content="Add Door"
                    />

                <Button
                    MinWidth="120"
                    Margin="5 2"
                     Background="White"
                    BorderBrush="Red"
                    Foreground="Red" 
                    FontWeight="SemiBold"
                    BorderThickness="2"
                    Command="{Binding RemoveCommand}"
                    Content="Remove"
                     />
            

            </StackPanel>

        </Grid>

        <Grid Grid.Row="1" Grid.ColumnSpan="2">

            <hx:Viewport3DX
                BackgroundColor="MintCream"
                Camera="{Binding Camera}"
                CameraRotationMode="Trackball"
                EnableSwapChainRendering="True"
                FixedRotationPointEnabled="True"
                InfoBackground="Transparent"
                InfoForeground="White"
                IsChangeFieldOfViewEnabled="True"
                Loaded="Viewport3DX_Loaded"
                ModelUpDirection="0,0,1"
                MouseDown3D="Viewport3DX_MouseDown3D"
                ShowCameraInfo="True"
                ShowCoordinateSystem="True"
                ShowFrameDetails="False"
                ShowTriangleCountInfo="True"
                ZoomExtentsWhenLoaded="True"
                ZoomSensitivity="0.9">
                <hx:Viewport3DX.InputBindings>
                    <KeyBinding Key="B" Command="hx:ViewportCommands.BackView" />
                    <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView" />
                    <KeyBinding Key="U" Command="hx:ViewportCommands.TopView" />
                    <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView" />
                    <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView" />
                    <KeyBinding Key="R" Command="hx:ViewportCommands.RightView" />
                    <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E" />
                    <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                    <!--<MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick"/>-->
                    <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="LeftClick" />
                </hx:Viewport3DX.InputBindings>




                <!--  Lighting  -->
                <hx:SpotLight3D Color="Yellow" />
                <hx:AmbientLight3D Color="Gray" />
                <hx:DirectionalLight3D Direction="0,0,-1" Color="LightYellow" />

                <!--  Models  -->

                <!--<hx:ItemsModel3D ItemsSource="{Binding ModelCollection}">
                    <hx:ItemsModel3D.Resources>
                        <DataTemplate DataType="{x:Type models:GeometryBase3D}">
                            <hx:MeshGeometryModel3D
                                CullMode="Back"
                                EnableViewFrustumCheck="False"
                                Geometry="{Binding MeshGeometry}"
                                Material="{Binding CurrentMaterial}"
                                RenderWireframe="False"
                                Transform="{Binding Transform}" />
                        </DataTemplate>
                    </hx:ItemsModel3D.Resources>
                </hx:ItemsModel3D>-->


                <hx:ItemsModel3D ItemsSource="{Binding ModelCollection}">
                    <hx:ItemsModel3D.ItemTemplate>
                        <DataTemplate>
                            <hx:MeshGeometryModel3D
                                CullMode="Back"
                                EnableViewFrustumCheck="False"
                                Geometry="{Binding MeshGeometry}"
                                Material="{Binding CurrentMaterial}"
                                RenderWireframe="False"
                                Transform="{Binding Transform}">
                            </hx:MeshGeometryModel3D>
                        </DataTemplate>
                    </hx:ItemsModel3D.ItemTemplate>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D ItemsSource="{Binding ModelCollection}"  >

                    <hx:ItemsModel3D.ItemTemplate>
                        <DataTemplate>
                            <hx:BatchedMeshGeometryModel3D
                                CullMode="Back"
                                EnableViewFrustumCheck="False"
                                BatchedGeometries="{Binding BatchedMeshes}"
                                BatchedMaterials="{Binding ModelMaterials}"
                                Material="{Binding BaseMaterial}"
                                RenderWireframe="False"
                                Transform="{Binding Transform}">
                            </hx:BatchedMeshGeometryModel3D>
                        </DataTemplate>
                    </hx:ItemsModel3D.ItemTemplate>
                </hx:ItemsModel3D>







                <hx:CoordinateSystemModel3D
                    AbsolutePosition3D="0,0,0"
                    AxisXColor="Red"
                    AxisYColor="Green"
                    AxisZColor="Blue"
                    CoordinateSystemLabelX="X"
                    CoordinateSystemLabelY="Y"
                    CoordinateSystemLabelZ="Z"
                    IsRendering="true"
                    LabelColor="White"
                    Mode="RelativeScreenSpaced"
                    SizeScale="200" />

            </hx:Viewport3DX>

        </Grid>

        <TextBlock
            Grid.Row="0"
            Grid.Column="2"
            Margin="5,10"
            HorizontalAlignment="Center"
            FontWeight="SemiBold"
            Foreground="white"
            Text="Properties" />

        <Grid
            Visibility="{Binding IsOpenMenu,Converter={StaticResource Bool2Vis}}"
            Name="props"
            Grid.Row="1"
            Grid.Column="2"
            Margin="5"
            
            Background="White"
            Opacity="0.9">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>



            <StackPanel>
                <Label HorizontalAlignment="Center" Foreground="Black">Diameter/Radius</Label>
                <Slider
                    Name="S1Value"
                    Margin="10,5"
                    Maximum="100"
                    TickFrequency="5"
                    TickPlacement="BottomRight"
                    Value="{Binding Diameter, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateDiameterCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock
                    Background="Black"
                    Foreground="White"
                    Text="{Binding ElementName=S1Value, Path=Value}" />
            </StackPanel>

            <StackPanel Grid.Row="1">
                <Label HorizontalAlignment="Center" Foreground="Black">Width:</Label>
                <Slider
                    Name="WidthValue"
                    Margin="10,0"
                    Maximum="100"
                    Minimum="50"
                    TickFrequency="1"
                    TickPlacement="BottomRight"
                    Value="{Binding Width, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateWidthCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock
                    Background="Black"
                    Foreground="White"
                    Text="{Binding ElementName=WidthValue, Path=Value}" />
            </StackPanel>

            <StackPanel Grid.Row="2">
                <Label HorizontalAlignment="Center" Foreground="Black">Length</Label>
                <Slider
                    Name="LengthValue"
                    Margin="10,5"
                    Maximum="100"
                    Minimum="30"
                    TickFrequency="1"
                    TickPlacement="BottomRight"
                    Value="{Binding Length, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateLengthCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <TextBlock
                    Background="Black"
                    Foreground="White"
                    Text="{Binding ElementName=LengthValue, Path=Value}" />
            </StackPanel>

            <ComboBox Grid.Row="3"
                      MinHeight="40"
                      MinWidth="200"
                      ItemsSource="{Binding ChainsCollection}"/>




        </Grid>


        <DataGrid
            Grid.Row="3"
            SelectionMode="Extended"
            SelectionUnit="FullRow"
            Grid.ColumnSpan="3"
            AutoGenerateColumns="True"
            CanUserAddRows="False"
            IsReadOnly="true"
            ItemsSource="{Binding ModelCollection}"
            SelectedItem="{Binding SelectedModel}"
            >
           
            <i:Interaction.Triggers>
            <i:EventTrigger EventName="PreviewMouseButtonDown">
                <i:InvokeCommandAction Command="{Binding SelectFromGridCommand}">
                    
                </i:InvokeCommandAction>
            </i:EventTrigger>
            </i:Interaction.Triggers>
            
            
          
           
            <DataGrid.Columns>
               
                
               
                <DataGridTextColumn
                    Binding="{Binding Id}"
                    Header="Id"
                    IsReadOnly="True" />

                <DataGridTextColumn
                    Binding="{Binding ModelName}"
                    Header="Name"
                    IsReadOnly="True" />

                <DataGridTextColumn
                    Binding="{Binding Position}"
                    Header="Position"
                    IsReadOnly="True" />

                <DataGridTextColumn
                    Binding="{Binding CurrentMaterial}"
                    Header="Material"
                    IsReadOnly="True" />
            </DataGrid.Columns>


            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">

                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Foreground" Value="Black" />

                </Style>
            </DataGrid.ColumnHeaderStyle>
            
           



        </DataGrid>




        <!--<ListBox ItemsSource="{Binding Geometry3DCollection}"
                     Grid.Row="3"
                     Grid.ColumnSpan="3"
                     SelectedItem="{Binding SelectedGeometry}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DataGrid>
                        <DataGridCell>
                            <TextBlock Text="{Binding}"></TextBlock>
                        </DataGridCell>
                    </DataGrid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->


















    </Grid>
</UserControl>
